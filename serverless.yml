org: joannewce6
app: ce6-group2-sls
service: ce6-group2-sls
frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs18.x
  region: ap-southeast-1
  iam:
   role:
   statements:
    - Effect: "Allow"
      Action:
        - sqs:SendMessage
        - sqs:ReceiveMessage
        - sqs:DeleteMessage
        - sqs:GetQueueAttributes
      Resource:
        - arn:aws:sqs:ap-southeast-1:255945442255:Grp2Queue

#functions:
#  api:
#    handler: index.handler
#    events:
#      - httpApi:
#          path: /
#          method: get
functions:
  sendtoSQS:
    handler: index.handler
    environment:
      SQS_QUEUE_URL: ${{ env.SQS_QUEUE_URL }}
      Ref: MessageQueue

    events:
      - http:
          path: send
          method: post

#      - sqs:
#          arn: arn:aws:sqs:ap-southeast-1:255945442255:Grp2Queue
#          batchSize: 10
#          maximumBatchingWindow: 60
#          functionResponseType: ReportBatchItemFailures
resources:
  Resources:
    MyQueue:
      Type: "AWS::SQS::Queue"
      Properties:
        QueueName: "Grp2Queue"
#Outputs:
#  SQSQueueUrl:
#    Value:
#    Ref: MessageQueue

#    SuperTopic:
#      Type: "AWS::SNS::Topic"
#      Properties:
#        TopicName: "MyCustomTopic"
# resources: # CloudFormation template syntax from here on.
#      Resources:
#        usersTable:
#          Type: AWS::DynamoDB::Table
#          Properties:
#            TableName: usersTable
#            AttributeDefinitions:
#              - AttributeName: email
#                AttributeType: S
#            KeySchema:
#              - AttributeName: email
#                KeyType: HASH
#            ProvisionedThroughput:
#              ReadCapacityUnits: 1
#              WriteCapacityUnits: 1

plugins:
  - serverless-offline
